/* 
 Copyright 2024 Chintalagiri Shashank
 
 This file is part of
 Embedded bootstraps : Peripheral driver implementations : AVR
 
 This library is free software: you can redistribute it and/or modify
 it under the terms of the GNU Lesser General Public License as published
 by the Free Software Foundation, either version 3 of the License, or
 (at your option) any later version.
 
 This program is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU General Public License for more details.
 
 You should have received a copy of the GNU Lesser General Public License
 along with this program.  If not, see <http://www.gnu.org/licenses/>. 
 */

#ifndef ID_IMPL_H
#define ID_IMPL_H

#include <application.h>
#include <hal/uc/eeprom.h>

/**
 * AVR ID is written to the end of the device EEPROM. 
 * 
 * The ID itself is 8 bytes long. A 9th byte contains the 
 * current ID state: 
 *   - 0xFF - Default, not initialized
 *   - 0x01 - Random, autogenerated
 *   - 0x02 - User Provided
 * 
 * At first init, a random ID is generated and stored. If 
 * UCDM is also enabled with write access to ID, then the user 
 * can overwrite this ID through the UCDM depending on other 
 * configuration.
 * 
 * In the typical implementation, a User Provided ID will not 
 * be allowed to be overwritted through the UCDM. 
 */

#if APP_ENABLE_ID && APP_ID_PROVIDER == 1

#define uC_ID_STATE_DEFAULT 0xFF
#define uC_ID_STATE_RANDOM  0x01
#define uC_ID_STATE_USER    0x02

#define uC_ID_SIZE          8
#define uC_ID_STATE_SIZE    1
#define uC_ID_TOTAL_SIZE    (uC_ID_SIZE + uC_ID_STATE_SIZE)
#define uC_ID_STATE_ADDR    (EEPROM_SIZE - 1)
#define uC_ID_ADDR          (uC_ID_STATE_ADDR - uC_ID_SIZE)

#endif
#endif
